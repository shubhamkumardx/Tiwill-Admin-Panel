{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shubham\\\\New-UI-Admin Panel\\\\Ui to shubham\\\\src\\\\Utils\\\\Protectedroute.jsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem(\"AccessToken\");\n  if (!token) {\n    // If no token found, redirect to login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  try {\n    const decodedToken = jwtDecode(token); // Decode the token\n    const currentTime = Date.now() / 1000; // Get current time in seconds\n\n    // Check if the token has expired\n    if (decodedToken.exp < currentTime) {\n      // If token expired, remove it and redirect to login\n      toast.error(\"Session expired. Please log in again.\");\n      localStorage.removeItem(\"AccessToken\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    }\n  } catch (error) {\n    console.error(\"Error decoding token:\", error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the token is valid and not expired, allow access to the route\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","toast","Toaster","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","decodedToken","currentTime","Date","now","exp","error","removeItem","console","_c","$RefreshReg$"],"sources":["C:/Shubham/New-UI-Admin Panel/Ui to shubham/src/Utils/Protectedroute.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem(\"AccessToken\");\r\n\r\n  if (!token) {\r\n    // If no token found, redirect to login page\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token); // Decode the token\r\n    const currentTime = Date.now() / 1000; // Get current time in seconds\r\n\r\n    // Check if the token has expired\r\n    if (decodedToken.exp < currentTime) {\r\n      // If token expired, remove it and redirect to login\r\n      toast.error(\"Session expired. Please log in again.\");\r\n      localStorage.removeItem(\"AccessToken\");\r\n      return <Navigate to=\"/login\" replace />;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error decoding token:\", error);\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // If the token is valid and not expired, allow access to the route\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEjD,IAAI,CAACF,KAAK,EAAE;IACV;IACA,oBAAOH,OAAA,CAACL,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,IAAI;IACF,MAAMC,YAAY,GAAGhB,SAAS,CAACO,KAAK,CAAC,CAAC,CAAC;IACvC,MAAMU,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;;IAEvC;IACA,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;MAClC;MACAhB,KAAK,CAACoB,KAAK,CAAC,uCAAuC,CAAC;MACpDb,YAAY,CAACc,UAAU,CAAC,aAAa,CAAC;MACtC,oBAAOlB,OAAA,CAACL,QAAQ;QAACW,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC;EACF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdE,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,oBAAOjB,OAAA,CAACL,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACkB,EAAA,GA1BInB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}