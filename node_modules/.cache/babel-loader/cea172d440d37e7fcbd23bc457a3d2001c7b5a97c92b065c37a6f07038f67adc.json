{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/TokenChecker.js\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n    return decodedToken.exp < currentTime;\n  } catch (e) {\n    console.error('Failed to decode token:', e);\n    return true; // Treat as expired if there's an error\n  }\n};\nconst TokenChecker = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token && isTokenExpired(token)) {\n      alert('Your session has expired. Please log in again.');\n      localStorage.removeItem('token');\n      navigate('/login');\n    }\n    const intervalId = setInterval(() => {\n      const token = localStorage.getItem('token');\n      if (token && isTokenExpired(token)) {\n        alert('Your session has expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    }, 60000); // Check every 60 seconds\n\n    return () => clearInterval(intervalId); // Clean up on unmount\n  }, [navigate]);\n  return null;\n};\n_s(TokenChecker, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = TokenChecker;\nexport default TokenChecker;\nvar _c;\n$RefreshReg$(_c, \"TokenChecker\");","map":{"version":3,"names":["React","useEffect","useNavigate","jwtDecode","isTokenExpired","token","decodedToken","currentTime","Date","now","exp","e","console","error","TokenChecker","_s","navigate","localStorage","getItem","alert","removeItem","intervalId","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/Shubham/New-UI-Admin Panel/Ui to shubham/src/Components/TokenChecker.jsx"],"sourcesContent":["// src/components/TokenChecker.js\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {jwtDecode} from 'jwt-decode';\n\nconst isTokenExpired = (token) => {\n  if (!token) return true;\n  try {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000; // Convert milliseconds to seconds\n    return decodedToken.exp < currentTime;\n  } catch (e) {\n    console.error('Failed to decode token:', e);\n    return true; // Treat as expired if there's an error\n  }\n};\n\nconst TokenChecker = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token && isTokenExpired(token)) {\n      alert('Your session has expired. Please log in again.');\n      localStorage.removeItem('token');\n      navigate('/login');\n    }\n\n    const intervalId = setInterval(() => {\n      const token = localStorage.getItem('token');\n      if (token && isTokenExpired(token)) {\n        alert('Your session has expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    }, 60000); // Check every 60 seconds\n\n    return () => clearInterval(intervalId); // Clean up on unmount\n  }, [navigate]);\n\n  return null;\n};\n\nexport default TokenChecker;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,SAAS,QAAO,YAAY;AAEpC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EACvB,IAAI;IACF,MAAMC,YAAY,GAAGH,SAAS,CAACE,KAAK,CAAC;IACrC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,OAAOH,YAAY,CAACI,GAAG,GAAGH,WAAW;EACvC,CAAC,CAAC,OAAOI,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,CAAC,CAAC;IAC3C,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC;AAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMI,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIb,KAAK,IAAID,cAAc,CAACC,KAAK,CAAC,EAAE;MAClCc,KAAK,CAAC,gDAAgD,CAAC;MACvDF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;MAChCJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;IAEA,MAAMK,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMjB,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIb,KAAK,IAAID,cAAc,CAACC,KAAK,CAAC,EAAE;QAClCc,KAAK,CAAC,gDAAgD,CAAC;QACvDF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;QAChCJ,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAMO,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CAzBID,YAAY;EAAA,QACCZ,WAAW;AAAA;AAAAsB,EAAA,GADxBV,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}