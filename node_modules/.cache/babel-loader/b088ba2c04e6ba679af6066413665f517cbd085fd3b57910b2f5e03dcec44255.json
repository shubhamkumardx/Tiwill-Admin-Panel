{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shubham\\\\New-UI-Admin Panel\\\\Ui to shubham\\\\src\\\\App.js\";\nimport React, { useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Layout from \"./layout/Layout\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, BrowserRouter } from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport Login from \"./Components/Login/Login\";\nimport UserList from \"./Components/UserList/UserList\";\nimport Eventlist from \"./Components/EventList/Eventlist\";\nimport ProtectedRoute from \"./Utils/Protectedroute\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user-list\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/event-list\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Eventlist, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","jwtDecode","Layout","BrowserRouter","Router","Routes","Route","Navigate","toast","Toaster","Dashboard","Login","UserList","Eventlist","ProtectedRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Shubham/New-UI-Admin Panel/Ui to shubham/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Layout from \"./layout/Layout\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n  BrowserRouter,\n} from \"react-router-dom\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport Login from \"./Components/Login/Login\";\nimport UserList from \"./Components/UserList/UserList\";\nimport Eventlist from \"./Components/EventList/Eventlist\";\nimport ProtectedRoute from \"./Utils/Protectedroute\";\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n\n          <Route\n            path=\"/dashboard\"\n            element={\n              <ProtectedRoute>\n                <Dashboard />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/user-list\"\n            element={\n              <ProtectedRoute>\n                <UserList />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/event-list\"\n            element={\n              <ProtectedRoute>\n                <Eventlist />\n              </ProtectedRoute>\n            }\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        </Routes>\n      </BrowserRouter>\n      <Toaster />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}